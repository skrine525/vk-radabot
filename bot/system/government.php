<?php

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
function government_initcmd($event){
	// –ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ
	$event->addTextMessageCommand("!–∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—è", 'government_constitution');
	$event->addTextMessageCommand("!–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç", 'government_president');
	$event->addTextMessageCommand("!—Å—Ç—Ä–æ–π", 'government_socorder');
	$event->addTextMessageCommand("!—Å—Ç—Ä–æ–π–ª–∏—Å—Ç", 'government_socorderlist');
	$event->addTextMessageCommand("!–∑–∞–∫–æ–Ω—ã", 'government_show_laws');
	$event->addTextMessageCommand("!–∑–∞–∫–æ–Ω", 'government_laws_cpanel');
	$event->addTextMessageCommand("!–ø–∞—Ä—Ç–∏—è", 'government_batch');
	$event->addTextMessageCommand("!—Å—Ç–æ–ª–∏—Ü–∞", 'government_capital');
	$event->addTextMessageCommand("!–≥–∏–º–Ω", 'government_anthem');
	$event->addTextMessageCommand("!—Ñ–ª–∞–≥", 'government_flag');
	$event->addTextMessageCommand("!–º–∏—Ç–∏–Ω–≥", 'government_rally');

	// –°–∏—Å—Ç–µ–º–∞ –≤—ã–±–æ—Ä–æ–≤
	$event->addTextMessageCommand("!votestart", 'government_referendum_start');
	//$event->addTextMessageCommand("!votestop", 'government_referendum_stop');
	$event->addTextMessageCommand("!candidate", 'government_referendum_candidate');
	$event->addTextMessageCommand("!vote", 'government_referendum_vote_cmd');
	$event->addCallbackButtonCommand("referendum_vote", "government_referendum_vote_cb");
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Data

class SocOrderClass{ // –ö–ª–∞—Å—Å –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ—ë–≤
	const TYPES = array('–ö–∞–ø–∏—Ç–∞–ª–∏–∑–º', '–°–æ—Ü–∏–∞–ª–∏–∑–º', '–ö–æ–º–º—É–Ω–∏–∑–º', '–§–∞—à–∏–∑–º');
	const ORDERS_DESC = array(
		"—ç—Ç–æ –∫–∞–ø–∏—Ç–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–µ–¥–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ —Å —Ä–µ—Å–ø—É–±–ª–∏–∫–∞–Ω—Å–∫–æ–π —Ñ–æ—Ä–º–æ–π –ø—Ä–∞–≤–ª–µ–Ω–∏—è",
		"—ç—Ç–æ —Å–æ—Ü–∏–∞–ª–∏—Å—Ç–∏—á–µ—Å–∫–∞—è —É–Ω–∏—Ç–∞—Ä–Ω–∞—è —Ä–µ—Å–ø—É–±–ª–∏–∫–∞ —Å –¥–µ–º–æ–∫—Ä–∞—Ç–∏—á–µ—Å–∫–æ–π –¥–∏–∫—Ç–∞—Ç—É—Ä–æ–π –Ω–∞—Ä–æ–¥–∞",
		"—ç—Ç–æ –∫–æ–º–º—É–Ω–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ —É–Ω–∏—Ç–∞—Ä–Ω–æ–µ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ —Å —Ç–æ—Ç–∞–ª–∏—Ç–∞—Ä–Ω—ã–º –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–º —Ä–µ–∂–∏–º–æ–º",
		"—ç—Ç–æ —Ñ–∞—à–∏—Å—Ç–∫–∞—è —É–Ω–∏—Ç–∞—Ä–Ω–∞—è –∏–º–ø–µ—Ä–∏—è —Å –¥–∏–∫—Ç–∞—Ç–æ—Ä—Å–∫–æ–π —Ñ–æ—Ä–º–æ–π –ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Ç–æ—Ç–∞–ª–∏—Ç–∞—Ä–Ω—ã–º –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–º —Ä–µ–∂–∏–º–æ–º"
	);

	public static function socOrderEncode($id){
		$array = self::TYPES;
		for($i = 0; $i < count($array); $i++){
			if(mb_strtoupper($array[$i]) == mb_strtoupper($id)){
				return $i+1;
			}
		}
		return 0;
	}

	public static function socOrderDecode($id){
		$array = self::TYPES;
		return $array[$id-1];
	}

	public static function getSocOrderDesc($id){
		return self::ORDERS_DESC[$id-1];
	}
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Goverment API

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function government_api_getdata($db){
	// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≥–æ—Å. –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
	define('DB_GOVERNMENT_DEFAULT', array(
		'soc_order' => 1,
		'president_id' => 0,
		'previous_president_id' => 0,
		'presidential_power' => 100,
		'parliament_id' => $db->getValue(array("owner_id")),
		'batch_name' => "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
		'laws' => array(),
		'anthem' => "null",
		'flag' => "null",
		'capital' => '–≥. –ú–¥–∞',
		'rally' => array(
			'for' => false,
			'against' => false
		),
		'referendum' => false,
		'last_referendum_time' => 0
	));

	$db_data = $db->getValue(array("government"), array());
	$data = array();
	foreach (DB_GOVERNMENT_DEFAULT as $key => $value) {
		if(array_key_exists($key, $db_data))
			$data[$key] = $db_data[$key];
		else
			$data[$key] = $value;
	}
	return $data;
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function government_api_setdata($db, $value){
	return $db->setValue(array("government"), $value);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Handlers

function government_constitution($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$gov = government_api_getdata($db);

	$current_soc_order_desc = SocOrderClass::getSocOrderDesc($gov["soc_order"]);
	if($gov["president_id"] != 0){
		$msg = "%__appeal__%, üì∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ:\nüèõ%__confa_name__% - {$current_soc_order_desc}.\n&#128104;&#8205;&#9878;–ì–ª–∞–≤–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞: %__president_name__%.\nüìñ–ü—Ä–∞–≤—è—â–∞—è –ø–∞—Ä—Ç–∏—è: {$gov["batch_name"]}.\nüè¢–°—Ç–æ–ª–∏—Ü–∞: {$gov["capital"]}.\n";

		$request = json_encode(array('peer_id' => $data->object->peer_id, 'message' => $msg, 'disable_mentions' => true), JSON_UNESCAPED_UNICODE);
		$request = vk_parse_vars($request, array("__president_name__", "__confa_name__", "__appeal__"));

		vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."var confa_info=API.messages.getConversationsById({'peer_ids':[{$data->object->peer_id}]}).items[0];var president_info=API.users.get({'user_ids':[{$gov["president_id"]}],'fields':'screen_name'})[0];var __president_name__='@'+president_info.screen_name+' ('+president_info.first_name+' '+president_info.last_name+')';var __confa_name__=confa_info.chat_settings.title;var __appeal__=appeal;appeal=null;return API.messages.send({$request});");
	}
	else{
		$msg = "%__appeal__%, üì∞–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ:\nüèõ%__confa_name__% - {$current_soc_order_desc}.\n&#128104;&#8205;&#9878;–ì–ª–∞–≤–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞: ‚õî–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω.\nüìñ–ü—Ä–∞–≤—è—â–∞—è –ø–∞—Ä—Ç–∏—è: {$gov["batch_name"]}.\nüè¢–°—Ç–æ–ª–∏—Ü–∞: {$gov["capital"]}.\n";

		$request = json_encode(array('peer_id' => $data->object->peer_id, 'message' => $msg, 'disable_mentions' => true), JSON_UNESCAPED_UNICODE);
		$request = vk_parse_vars($request, array("__president_name__", "__confa_name__", "__appeal__"));

		vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."var confa_info = API.messages.getConversationsById({'peer_ids':[{$data->object->peer_id}]}).items[0];var __confa_name__ = confa_info.chat_settings.title;var __appeal__ = appeal; appeal = null;return API.messages.send({$request});");
	}
}

function government_show_laws($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);

	$laws = government_api_getdata($db)["laws"];
	if(array_key_exists(1, $argv))
		$number = intval($argv[1]);
	else
		$number = 1;

	if(count($laws) == 0){
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚ùó–ü–æ–∫–∞ –Ω–µ—Ç –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–∫–æ–Ω–æ–≤!");
		return;
	}

	$laws_content = array();
	for($i = 0; $i < count($laws); $i++){
		$laws_content[] = $laws[$i]["content"];
	}

	/////////////////////////////////////////////////////
	////////////////////////////////////////////////////
	$list_in = &$laws_content; // –í—Ö–æ–¥–Ω–æ–π —Å–ø–∏—Å–æ–∫
	$list_out = array(); // –í—ã—Ö–æ–¥–Ω–æ–π —Å–ø–∏—Å–æ–∫

	$list_number = $number; // –ù–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞
	$list_size = 10; // –†–∞–∑–º–µ—Ä —Å–ø–∏—Å–∫–∞
	////////////////////////////////////////////////////
	if(count($list_in) % $list_size == 0)
		$list_max_number = intdiv(count($list_in), $list_size);
	else
		$list_max_number = intdiv(count($list_in), $list_size)+1;
	$list_min_index = ($list_size*$list_number)-$list_size;
	if($list_size*$list_number >= count($list_in))	
		$list_max_index = count($list_in)-1;
	else
		$list_max_index = $list_size*$list_number-1;
	if($list_number <= $list_max_number && $list_number > 0){
		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ø–∏—Å–∫–∞
		for($i = $list_min_index; $i <= $list_max_index; $i++){
			$list_out[] = $list_in[$i];
		}
	}
	else{
		// –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî—É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä —Å–ø–∏—Å–∫–∞!");
		return;
	}
	////////////////////////////////////////////////////
	////////////////////////////////////////////////////

	$laws_content = $list_out;

	$msg = "%appeal%, üìå–∑–∞–∫–æ–Ω—ã [{$list_number}/{$list_max_number}]:";
	for($i = 0; $i < count($laws_content); $i++){
		$law_id = ($i+1)+10*($list_number-1);
		$msg = $msg . "\n{$law_id}. {$laws_content[$i]}";
	}

	$messagesModule->sendSilentMessage($data->object->peer_id, $msg);
}

function government_laws_cpanel($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);
	$gov = government_api_getdata($db);

	if(array_key_exists(1, $argv))
		$command = mb_strtolower($argv[1]);
	else
		$command = "";

	if($command == "–¥–æ–±–∞–≤–∏—Ç—å"){
		if($data->object->from_id == $gov["president_id"] || $data->object->from_id == $gov["parliament_id"]){
			$time = time();
			$content = mb_substr($data->object->text, 16);
			$publisher_type = 1;
			if($data->object->from_id == $gov["parliament_id"])
				$publisher_type = 2;
			$publisher_id = $data->object->from_id;

			$gov["laws"][] = array(
				'time' => $time,
				'publisher_type' => $publisher_type,
				'publisher_id' => $publisher_id,
				'content' => $content
			);
			government_api_setdata($db, $gov);
			$db->save();
			$messagesModule->sendSilentMessage($data->object->peer_id, "@id{$data->object->from_id} (–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ) –æ–±–Ω–æ–≤–∏–ª–æ –∑–∞–∫–æ–Ω—ã.");
		}
		else{
			$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
		}
	}
	elseif($command == "–æ—Ç–º–µ–Ω–∏—Ç—å"){
		if($data->object->from_id == $gov["president_id"] || $data->object->from_id == $gov["parliament_id"]){
			if(array_key_exists(2, $argv))
				$law_id = intval($argv[2]);
			else
				$law_id = 0;
			if($law_id == 0){
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–£–∫–∞–∂–∏—Ç–µ ID –∑–∞–∫–æ–Ω–∞!");
				return;
			}

			if(!is_null($gov["laws"][$law_id-1])){
				$law = $gov["laws"][$law_id-1];

				if($law["publisher_type"] == 1){
					if($gov["president_id"] == $data->object->from_id){
						unset($gov["laws"][$law_id-1]);
						$laws_tmp = array_values($gov["laws"]);
						$laws = array();
						for($i = 0; $i < count($laws_tmp); $i++){
							$laws[] = $laws_tmp[$i];
						}
						$gov["laws"] = $laws;
						$db->setValue(array("government", "laws"), $gov["laws"]);
						$db->save();
						$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚úÖ–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–∫–æ–Ω ‚Ññ{$law_id}.");
					}
					else{
						$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–æ–Ω –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞!");
					}
				}
				else{
					if($gov["parliament_id"] == $data->object->from_id){
						unset($gov["laws"][$law_id-1]);
						$laws_tmp = array_values($gov["laws"]);
						$laws = array();
						for($i = 0; $i < count($laws_tmp); $i++){
							$laws[] = $laws_tmp[$i];
						}
						$gov["laws"] = $laws;
						government_api_setdata($db, $gov);
						$db->save();
						$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚úÖ–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –∑–∞–∫–æ–Ω ‚Ññ{$law_id}.");
					}
					else{
						$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–æ–Ω –ø–∞—Ä–ª–∞–º–µ–Ω—Ç–∞!");
					}
				}
			}
			else{
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–ó–∞–∫–æ–Ω–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
			}
		}
		else{
			$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
		}
	}
	elseif($command == "–∏–Ω—Ñ–∞"){
		if(array_key_exists(2, $argv))
			$law_id = intval($argv[2]);
		else
			$law_id = 0;
		if($law_id == 0){
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–£–∫–∞–∂–∏—Ç–µ ID –∑–∞–∫–æ–Ω–∞!");
			return;
		}

		if(!is_null($gov["laws"][$law_id-1])){
			$law = $gov["laws"][$law_id-1];

			$publisher_type_str = "–ü–∞—Ä–ª–∞–º–µ–Ω—Ç";

			if($law["publisher_type"] == 1){
				if($law["publisher_id"] == $gov["president_id"])
					$publisher_type_str = "–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç";
				else
					$publisher_type_str = "–≠–∫c-–øpe–∑–∏–¥e–Ω—Ç";
			}

			$date = gmdate("d.m.Y H:i:s (–ø–æ –ú–°–ö)", $law["time"]+10800);

			$msg = "%__appeal__%, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–æ–Ω–µ:\n‚úÖ–£–∫–∞–∑–∞–Ω: %__publisher_name__% ({$publisher_type_str})\n‚úÖ–î–∞—Ç–∞ —É–∫–∞–∑–∞: {$date}\n‚úÖ–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∑–∞–∫–æ–Ω–∞: {$law["content"]}";

			$request = json_encode(array('peer_id' => $data->object->peer_id, 'message' => $msg, 'disable_mentions' => true), JSON_UNESCAPED_UNICODE);
			$request = vk_parse_vars($request, array("__publisher_name__", "__appeal__"));

			vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."var publisher = API.users.get({'user_ids':[{$law['publisher_id']}],'fields':'screen_name,first_name_ins,last_name_ins'})[0];var __publisher_name__ = '@'+publisher.screen_name+' ('+publisher.first_name_ins+' '+publisher.last_name_ins+')';var __appeal__ = appeal; appeal = null;return API.messages.send({$request});");
		}
		else{
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–ó–∞–∫–æ–Ω–∞ —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!");
		}
	}
	elseif($command == "–ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å"){
		if($data->object->from_id != $gov["president_id"] && $data->object->from_id != $gov["parliament_id"]){
			$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
			return;
		}
		if(array_key_exists(2, $argv))
			$from = intval($argv[2]);
		else
			$from = 0;

		if(array_key_exists(3, $argv))
			$to = intval($argv[3]);
		else
			$to = 0;

		if($from == $to){
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –∑–∞–∫–æ–Ω –≤ –æ–¥–Ω–æ –∏ —Ç–æ–∂–µ –º–µ—Å—Ç–æ.");
			return;
		}

		if(is_null($gov["laws"][$from-1])){
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–ó–∞–∫–æ–Ω–∞ ‚Ññ{$from} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.");
			return;
		}
		if(is_null($gov["laws"][$to-1])){
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–ó–∞–∫–æ–Ω–∞ ‚Ññ{$to} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.");
			return;
		}

		$tmp = $gov["laws"][$to-1];
		$gov["laws"][$to-1] = $gov["laws"][$from-1];
		$gov["laws"][$from-1] = $tmp;
		government_api_setdata($db, $gov);
		$db->save();
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚úÖ–ó–∞–∫–æ–Ω ‚Ññ{$from} –ø–µ—Ä–µ–º–µ—â–µ–Ω –Ω–∞ –º–µ—Å—Ç–æ –∑–∞–∫–æ–Ω–∞ ‚Ññ{$to}.");

	}
	else{
		$commands = array(
			'!–∑–∞–∫–æ–Ω –¥–æ–±–∞–≤–∏—Ç—å <—Ç–µ–∫—Å—Ç> - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–∞',
			'!–∑–∞–∫–æ–Ω –æ—Ç–º–µ–Ω–∏—Ç—å <id> - –û—Ç–º–µ–Ω–∞ –∑–∞–∫–æ–Ω–∞',
			'!–∑–∞–∫–æ–Ω –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å <from> <to> - –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–∞ –∏–∑ –ø–æ–∑–∏—Ü–∏–∏ from –≤ –ø–æ–∑–∏—Ü–∏—é to',
			'!–∑–∞–∫–æ–Ω –∏–Ω—Ñ–∞ <id> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–æ–Ω–µ'

		);
		$messagesModule->sendSilentMessageWithListFromArray($data->object->peer_id, "%appeal%, &#9940;–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:", $commands);
	}
}

function government_president($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);
	$gov = government_api_getdata($db);
	$presidential_power_text = round($gov["presidential_power"], 2);
	if(!array_key_exists(1, $argv)){
		if($gov["president_id"] != 0){
			$msg = "%appeal%,\n&#128104;&#8205;&#9878;–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç: %president_name%.\nüí™üèª–õ–µ–≥–∏—Ç–∏–º–Ω–æ—Å—Ç—å: {$presidential_power_text}%";
			$request = json_encode(array('peer_id' => $data->object->peer_id, 'message' => $msg, 'disable_mentions' => true), JSON_UNESCAPED_UNICODE);
			$request = vk_parse_vars($request, array("appeal", "president_name"));
			vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."var president = API.users.get({'user_ids':[{$gov["president_id"]}]})[0];var president_name = '@id{$gov["president_id"]} ('+president.first_name+' '+president.last_name+')';return API.messages.send({$request});");
		}
		else
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%,\n&#128104;&#8205;&#9878;–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç: ‚õî–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω.");
	}
}

function government_batch($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);
	$gov = government_api_getdata($db);
	if(!array_key_exists(1, $argv)){
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#128214;–î–µ–π—Å—Ç–≤—É—é—â–∞—è –ø–∞—Ä—Ç–∏—è: ".$gov["batch_name"].".", $data->object->from_id);
	} else {
		if($data->object->from_id == $gov["president_id"]){
			$gov["batch_name"] = mb_substr($data->object->text, 8, mb_strlen($data->object->text));
			government_api_setdata($db, $gov);
			$db->save();
			$msg = "@id".$gov["president_id"]." (–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç) –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–ª –¥–µ–π—Å—Ç–≤—É—é—â—É—é –ø–∞—Ä—Ç–∏—é.";
			$messagesModule->sendSilentMessage($data->object->peer_id, $msg);
		} else {
			$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
		}
	}
}

function government_capital($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);
	$gov = government_api_getdata($db);
	if(!array_key_exists(1, $argv)){
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#127970;–¢–µ–∫—É—â–∞—è —Å—Ç–æ–ª–∏—Ü–∞: ".$gov["capital"].".");
	} else {
		if($data->object->from_id == $gov["president_id"]){
			$gov["capital"] = mb_substr($data->object->text, 9, mb_strlen($data->object->text));
			government_api_setdata($db, $gov);
			$db->save();
			$msg = "@id".$gov["president_id"]." (–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç) –∏–∑–º–µ–Ω–∏–ª —Å—Ç–æ–ª–∏—Ü—É –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.";
			$messagesModule->sendSilentMessage($data->object->peer_id, $msg);
		} elseif($data->object->from_id == $gov["parliament_id"]){
			$gov["capital"] = mb_substr($data->object->text, 9, mb_strlen($data->object->text));
			government_api_setdata($db, $gov);
			$db->save();
			$msg = "@id".$gov["parliament_id"]." (–ü–∞—Ä–ª–∞–º–µ–Ω—Ç) –∏–∑–º–µ–Ω–∏–ª —Å—Ç–æ–ª–∏—Ü—É –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.";
			$messagesModule->sendSilentMessage($data->object->peer_id, $msg);
		} else {
			$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
		}
	}
}

function government_socorder($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);
	$gov = government_api_getdata($db);
	if(!array_key_exists(1, $argv)){
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚öî–¢–µ–∫—É—â–∏–π –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç—Ä–æ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞: ".SocOrderClass::socOrderDecode($gov["soc_order"]).".");
	} else {
		if($data->object->from_id == $gov["parliament_id"]){
			$id = SocOrderClass::socOrderEncode($argv[1]);
			if ($id != 0){
				$gov["soc_order"] = $id;
				government_api_setdata($db, $gov);
				$db->save();
				$msg = "@id".$gov["parliament_id"]." (–ü–∞—Ä–ª–∞–º–µ–Ω—Ç–æ–º) –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç—Ä–æ–π.";
				$messagesModule->sendSilentMessage($data->object->peer_id, $msg);
			} else {
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, –¢–∞–∫–æ–≥–æ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç—Ä–æ—è –Ω–µ—Ç! –°–º–æ—Ç—Ä–∏—Ç–µ !—Å—Ç—Ä–æ–π–ª–∏—Å—Ç.");
			}
		} elseif ($data->object->from_id == $gov["president_id"]) {
			$id = SocOrderClass::socOrderEncode($argv[1]);
			if ($id != 0){
				$gov["soc_order"] = $id;
				government_api_setdata($db, $gov);
				$db->save();
				$msg = "@id".$gov["president_id"]." (–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º) –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç—Ä–æ–π.";
				$messagesModule->sendSilentMessage($data->object->peer_id, $msg);
			} else {
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, –¢–∞–∫–æ–≥–æ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç—Ä–æ—è –Ω–µ—Ç! –°–º–æ—Ç—Ä–∏—Ç–µ !—Å—Ç—Ä–æ–π–ª–∏—Å—Ç.");
			}
		} else {
			$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
		}
	}
}

function government_socorderlist($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);
	$array = SocOrderClass::TYPES;
	$msg = "";
	for($i = 0; $i < count($array); $i++){
		$msg = $msg."\n&#127381;".$array[$i];
	}

	$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, –°–ø–∏—Å–æ–∫ –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ç—Ä–æ–µ–≤: ".$msg);
}

function government_anthem($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);
	$gov = government_api_getdata($db);
	if(count($data->object->attachments) == 0){
		if($gov["anthem"] != "null"){
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#129345;–ù–∞—à –≥–∏–º–Ω: ", array('attachment' => $gov["anthem"]));
		} else {
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#129345;–£ –Ω–∞—Å –Ω–µ—Ç –≥–∏–º–Ω–∞!");
		}
	} else {
		if($data->object->from_id == $gov["president_id"]){
			$first_audio_id = -1;
			$audio = "";
			for($i = 0; $i < count($data->object->attachments); $i++){
				if($data->object->attachments[$i]->type == "audio"){
					$first_audio_id = $i;
					break;
				}
			}
			if ($first_audio_id != -1){
				$gov["anthem"] = "audio".$data->object->attachments[$first_audio_id]->audio->owner_id."_".$data->object->attachments[$first_audio_id]->audio->id;
				government_api_setdata($db, $gov);
				$db->save();
				$msg = "@id".$gov["president_id"]." (–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç) –∏–∑–º–µ–Ω–∏–ª –≥–∏–º–Ω –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.";
				$messagesModule->sendSilentMessage($data->object->peer_id, $msg);
			} else {
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–ê—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
			}
		} elseif($data->object->from_id == $gov["parliament_id"]){
			$first_audio_id = -1;
			$audio = "";
			for($i = 0; $i < count($data->object->attachments); $i++){
				if($data->object->attachments[$i]->type == "audio"){
					$first_audio_id = $i;
					break;
				}
			}
			if ($first_audio_id != -1){
				$gov["anthem"] = "audio".$data->object->attachments[$first_audio_id]->audio->owner_id."_".$data->object->attachments[$first_audio_id]->audio->id;
				government_api_setdata($db, $gov);
				$db->save();
				$msg = "@id".$gov["parliament_id"]." (–ü–∞—Ä–ª–∞–º–µ–Ω—Ç) –∏–∑–º–µ–Ω–∏–ª –≥–∏–º–Ω –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.";
				$messagesModule->sendSilentMessage($data->object->peer_id, $msg);
			} else {
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–ê—É–¥–∏–æ–∑–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
			}
		} else {
			$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
		}
	}
}

function government_flag($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);
	$gov = government_api_getdata($db);
	if(count($data->object->attachments) == 0){
		if($gov["flag"] != "null"){
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#127987;–ù–∞—à —Ñ–ª–∞–≥: ", array('attachment' => $gov["flag"]));
		} else {
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#127987;–£ –Ω–∞—Å –Ω–µ—Ç —Ñ–ª–∞–≥–∞!");
		}
	} else {
		if($data->object->from_id == $gov["president_id"]){
			$first_photo_id = -1;
			for($i = 0; $i < count($data->object->attachments); $i++){
				if($data->object->attachments[$i]->type == "photo"){
					$first_photo_id = $i;
					break;
				}
			}
			if ($first_photo_id != -1){
				$photo_sizes = $data->object->attachments[$first_photo_id]->photo->sizes;
				$photo_url_index = 0;
				for($i = 0; $i < count($photo_sizes); $i++){
					if($photo_sizes[$i]->height > $photo_sizes[$photo_url_index]->height){
						$photo_url_index = $i;
					}
				}
				$photo_url = $photo_sizes[$photo_url_index]->url;
				$path = BOT_TMPDIR."/photo".mt_rand(0, 65535).".jpg";
				file_put_contents($path, file_get_contents($photo_url));
				$response =  json_decode(vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."return API.photos.getMessagesUploadServer({'peer_id':{$data->object->peer_id}});"));
				$res = json_decode(vk_uploadDocs(array('photo' => new CURLFile($path)), $response->response->upload_url));
				unlink($path);
				$msg = "@id".$gov["president_id"]." (–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç) –∏–∑–º–µ–Ω–∏–ª —Ñ–ª–∞–≥ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.";
				$res_json = json_encode(array('photo' => $res->photo, 'server' => $res->server, 'hash' => $res->hash));
				$photo = json_decode(vk_execute("var doc = API.photos.saveMessagesPhoto({$res_json});API.messages.send({'peer_id':{$data->object->peer_id},'message':'{$msg}','disable_mentions':true});return doc;"))->response[0];
				$gov["flag"] = "photo{$photo->owner_id}_{$photo->id}";
				government_api_setdata($db, $gov);
				$db->save();
			} else {
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
			}
		} elseif($data->object->from_id == $gov["parliament_id"]){
			$first_photo_id = -1;
			$photo = "";
			for($i = 0; $i < count($data->object->attachments); $i++){
				if($data->object->attachments[$i]->type == "photo"){
					$first_photo_id = $i;
					break;
				}
			}
			if ($first_photo_id != -1){
				$photo_sizes = $data->object->attachments[$first_photo_id]->photo->sizes;
				$photo_url_index = 0;
				for($i = 0; $i < count($photo_sizes); $i++){
					if($photo_sizes[$i]->height > $photo_sizes[$photo_url_index]->height){
						$photo_url_index = $i;
					}
				}
				$photo_url = $photo_sizes[$photo_url_index]->url;
				$path = BOT_TMPDIR."/photo".mt_rand(0, 65535).".jpg";
				file_put_contents($path, file_get_contents($photo_url));
				$response =  json_decode(vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."return API.photos.getMessagesUploadServer({'peer_id':{$data->object->peer_id}});"));
				$res = json_decode(vk_uploadDocs(array('photo' => new CURLFile($path)), $response->response->upload_url));
				unlink($path);
				$msg = "@id".$gov["parliament_id"]." (–ü–∞—Ä–ª–∞–º–µ–Ω—Ç) –∏–∑–º–µ–Ω–∏–ª —Ñ–ª–∞–≥ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞.";
				$res_json = json_encode(array('photo' => $res->photo, 'server' => $res->server, 'hash' => $res->hash));
				$photo = json_decode(vk_execute("var doc = API.photos.saveMessagesPhoto({$res_json});API.messages.send({'peer_id':{$data->object->peer_id},'message':'{$msg}','disable_mentions':true});return doc;"))->response[0];
				$gov["flag"] = "photo{$photo->owner_id}_{$photo->id}";
				government_api_setdata($db, $gov);
				$db->save();
			} else {
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, &#9940;–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!", $data->object->from_id);
			}
		} else {
			$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
		}
	}
}

function government_rally($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$date = time(); // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—Ä–µ–º–µ–Ω–∏

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);

	$argvt = mb_strtolower(bot_get_array_value($argv, 1, ""));

	$gov = government_api_getdata($db);

	if($gov["president_id"] == 0){
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç –Ω–µ –≤—ã–±—Ä–∞–Ω.");
		return;
	}
	elseif($gov["referendum"] !== false){
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–°–µ–π—á–∞—Å –ø—Ä–æ—Ö–æ–¥—è—Ç –≤—ã–±–æ—Ä—ã.");
		return;
	}

	switch ($argvt) {
		case '–∑–∞':
		$rally_for = $gov["rally"]["for"];
		$rally_against = $gov["rally"]["against"];
		if($rally_for !== false){
			if($rally_against !== false && array_key_exists("id{$data->object->from_id}", $rally_against["members"])){
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –º–∏—Ç–∏–Ω–≥–µ –ü—Ä–æ—Ç–∏–≤ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).");
				return;
			}
			elseif(array_key_exists("id{$data->object->from_id}", $rally_for["members"])){
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –º–∏—Ç–∏–Ω–≥–µ –ó–∞ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).");
				return;
			}
			$rally_for["members"]["id{$data->object->from_id}"] = 0;
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚úÖ–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –º–∏—Ç–∏–Ω–≥—É –ó–∞ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ [!–º–∏—Ç–∏–Ω–≥], —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ.");
		}
		else{
			if($rally_against !== false && array_key_exists("id{$data->object->from_id}", $rally_against["members"])){
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –º–∏—Ç–∏–Ω–≥–µ –ü—Ä–æ—Ç–∏–≤ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).");
				return;
			}
			$rally_for = array(
				'organizer_id' => $data->object->from_id,
				'members' => array(
					"id{$data->object->from_id}" => 0
				)
			);
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚úÖ–í—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª–∏ –º–∏—Ç–∏–Ω–≥ –ó–∞ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ [!–º–∏—Ç–∏–Ω–≥], —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –µ–≥–æ.");
		}
		$gov["rally"]["for"] = $rally_for;
		government_api_setdata($db, $gov);
		$db->save();
		break;

		case '–ø—Ä–æ—Ç–∏–≤':
		$rally_for = $gov["rally"]["for"];
		$rally_against = $gov["rally"]["against"];
		if($rally_against !== false){
			if($rally_for !== false && array_key_exists("id{$data->object->from_id}", $rally_for["members"])){
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –º–∏—Ç–∏–Ω–≥–µ –ó–∞ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).");
				return;
			}
			elseif($data->object->from_id == $gov["president_id"]){
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –º–∏—Ç–∏–Ω–≥–µ –ø—Ä–æ—Ç–∏–≤ —Å–µ–±—è.");
				return;
			}
			elseif(array_key_exists("id{$data->object->from_id}", $rally_against["members"])){
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –º–∏—Ç–∏–Ω–≥–µ –ü—Ä–æ—Ç–∏–≤ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).");
				return;
			}
			$rally_against["members"]["id{$data->object->from_id}"] = 0;
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚úÖ–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –º–∏—Ç–∏–Ω–≥—É –ü—Ä–æ—Ç–∏–≤ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ [!–º–∏—Ç–∏–Ω–≥], —á—Ç–æ–±—ã —Å–≤–µ—Ä–≥–Ω—É—Ç—å –µ–≥–æ.");
		}
		else{
			if($rally_for !== false && array_key_exists("id{$data->object->from_id}", $rally_for["members"])){
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –º–∏—Ç–∏–Ω–≥–µ –ó–∞ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).");
				return;
			}
			elseif($data->object->from_id == $gov["president_id"]){
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É—Å—Ç—Ä–æ–∏—Ç—å –º–∏—Ç–∏–Ω–≥ –ø—Ä–æ—Ç–∏–≤ —Å–µ–±—è.");
				return;
			}
			$rally_against = array(
				'organizer_id' => $data->object->from_id,
				'members' => array(
					"id{$data->object->from_id}" => 0
				)
			);
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚úÖ–í—ã –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª–∏ –º–∏—Ç–∏–Ω–≥ –ü—Ä–æ—Ç–∏–≤ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ [!–º–∏—Ç–∏–Ω–≥], —á—Ç–æ–±—ã —Å–≤–µ—Ä–≥–Ω—É—Ç—å –µ–≥–æ.");
		}
		$gov["rally"]["against"] = $rally_against;
		government_api_setdata($db, $gov);
		$db->save();
		break;
		
		default:
		$rally_for = $gov["rally"]["for"];
		$rally_against = $gov["rally"]["against"];
		$member_key = "id{$data->object->from_id}";
		if($rally_for !== false && array_key_exists($member_key, $rally_for["members"])){
			if($date - $rally_for["members"][$member_key] >= 3600){
				$members_count = count($rally_against["members"]);
				$r = json_decode(vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."var peer_id={$data->object->peer_id};var presidential_power={$gov["presidential_power"]};var members_in_chat=API.messages.getConversationMembers({'peer_id':peer_id});var members_in_rally={$members_count};var percentage_of_one=(1/members_in_chat.profiles.length)*0.1;var rally_result=percentage_of_one+(members_in_rally-1)*(percentage_of_one*0.25);presidential_power=presidential_power+rally_result*100;if(presidential_power>100){presidential_power=100;}API.messages.send({'peer_id':peer_id,'message':appeal+', ‚úÖ–í—ã –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ –º–∏—Ç–∏–Ω–≥–µ –ó–∞ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).','disable_mentions':true});return presidential_power;"));
				if(gettype($r) == "object" && property_exists($r, 'response')){
					$presidential_power = $r->response;
					$gov["rally"]["for"]["members"][$member_key] = $date;
					$gov["presidential_power"] = $presidential_power;
					government_api_setdata($db, $gov);
					$db->save();
				}
			}
			else{
				$left_time = 3600 - ($date - $rally_for["members"][$member_key]);
				$minutes = intdiv($left_time, 60);
				$seconds = $left_time % 60;
				$left_time_text = "";
				if($minutes != 0)
					$left_time_text = "{$minutes} –º–∏–Ω. ";
				$left_time_text = $left_time_text."{$seconds} —Å–µ–∫.";
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã —É—Å—Ç–∞–ª–∏ –∏ –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç–µ –º–∏—Ç–∏–Ω–≥–æ–≤–∞—Ç—å. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ {$left_time_text}");
			}
		}
		elseif($rally_against !== false && array_key_exists($member_key, $rally_against["members"])){
			if($date - $rally_against["members"][$member_key] >= 3600){
				$members_count = count($rally_against["members"]);
				$r = json_decode(vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."var peer_id={$data->object->peer_id};var presidential_power={$gov["presidential_power"]};var users=API.users.get({'user_ids':[{$rally_against["organizer_id"]},{$gov["president_id"]}],'fields':'first_name_ins,last_name_ins,first_name_gen,last_name_gen'});var members_in_chat=API.messages.getConversationMembers({'peer_id':peer_id});var members_in_rally={$members_count};var percentage_of_one=(1/members_in_chat.profiles.length)*0.1;var rally_result=percentage_of_one+(members_in_rally-1)*(percentage_of_one*0.25);presidential_power=presidential_power-rally_result*100;if(presidential_power<=0){presidential_power=0;API.messages.send({'peer_id':peer_id,'message':'‚ùó–ú–∏—Ç–∏–Ω–≥, –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω–Ω—ã–π @id'+users[0].id+' ('+users[0].first_name_ins.substr(0, 2)+'. '+users[0].last_name_ins+'), –ø–æ–∑–≤–æ–ª–∏–ª –¥–æ–±–∏—Ç—å—Å—è —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç–∏ –∏ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å–≤–æ @id'+users[1].id+' ('+users[1].first_name_gen.substr(0, 2)+'. '+users[1].last_name_gen+') –ø–æ–¥–∞–ª–æ –≤ –æ—Ç—Å—Ç–∞–≤–∫—É. –û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω—ã –¥–æ—Å—Ä–æ—á–Ω—ã–µ –≤—ã–±–æ—Ä—ã –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞.','disable_mentions':true});}else{API.messages.send({'peer_id':peer_id,'message':appeal+', ‚úÖ–í—ã –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞–ª–∏ –≤ –º–∏—Ç–∏–Ω–≥–µ –ü—Ä–æ—Ç–∏–≤ @id{$gov["president_id"]} (–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞).','disable_mentions':true});}return presidential_power;"));
				if(gettype($r) == "object" && property_exists($r, 'response')){
					$presidential_power = $r->response;
					if($presidential_power == 0){
						$gov["previous_president_id"] = $gov["president_id"];
						$gov["president_id"] = 0;
						$gov["rally"] = DB_GOVERNMENT_DEFAULT["rally"];
						$gov["batch_name"] = DB_GOVERNMENT_DEFAULT["batch_name"];
						$gov["referendum"] = array(
							'candidate1' => array('id' => 0, "voters_count" => 0),
							'candidate2' => array('id' => 0, "voters_count" => 0),
							'all_voters' => array(),
							'start_time' => $date,
							'last_notification_time' => 0
						);
						government_api_setdata($db, $gov);
						$db->save();
					}
					else{
						$gov["rally"]["against"]["members"][$member_key] = $date;
						$gov["presidential_power"] = $presidential_power;
						government_api_setdata($db, $gov);
						$db->save();
					}
				}
			}
			else{
				$left_time = 3600 - ($date - $rally_against["members"][$member_key]);
				$minutes = intdiv($left_time, 60);
				$seconds = $left_time % 60;
				$left_time_text = "";
				if($minutes != 0)
					$left_time_text = "{$minutes} –º–∏–Ω. ";
				$left_time_text = $left_time_text."{$seconds} —Å–µ–∫.";
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã —É—Å—Ç–∞–ª–∏ –∏ –±–æ–ª—å—à–µ –Ω–µ –º–æ–∂–µ—Ç–µ –º–∏—Ç–∏–Ω–≥–æ–≤–∞—Ç—å. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ {$left_time_text}");
			}
		}
		else{
			$messagesModule->sendSilentMessageWithListFromArray($data->object->peer_id, "%appeal%, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:", array(
				'!–º–∏—Ç–∏–Ω–≥ –∑–∞ - –ú–∏—Ç–∏–Ω–≥ –∑–∞ –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞',
				'!–º–∏—Ç–∏–Ω–≥ –ø—Ä–æ—Ç–∏–≤ - –ú–∏—Ç–∏–Ω–≥ –ø—Ä–æ—Ç–∏–≤ –ü—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞'
			));
		}
		break;
	}
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// –°–∏—Å—Ç–µ–º–∞ –≤—ã–±–æ—Ä–æ–≤

function government_referendum_start($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);

	$gov = government_api_getdata($db);
	if($data->object->from_id == $gov["parliament_id"]){
		if($gov["referendum"] === false){
			$date = time(); // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—Ä–µ–º–µ–Ω–∏
			$gov["previous_president_id"] = $gov["president_id"];
			$gov["president_id"] = 0;
			$gov["rally"] = DB_GOVERNMENT_DEFAULT["rally"];
			$gov["referendum"] = array(
				'candidate1' => array('id' => 0, "voters_count" => 0),
				'candidate2' => array('id' => 0, "voters_count" => 0),
				'all_voters' => array(),
				'start_time' => $date,
				'last_notification_time' => $date
			);
			government_api_setdata($db, $gov);
			$db->save();
			$messagesModule->sendSilentMessage($data->object->peer_id, "–ù–∞—á–∞–ª–∏—Å—å –≤—ã–±–æ—Ä—ã –≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—ã –±–µ—Å–µ–¥—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –∫–∞–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \"!candidate\".");
		}
		else
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, –≤—ã–±–æ—Ä—ã —É–∂–µ –ø—Ä–æ—Ö–æ–¥—è—Ç.");
	}
	else
		$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
}

function government_referendum_stop($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);

	$gov = government_api_getdata($db);
	if($data->object->from_id == $gov["parliament_id"]){
		if($gov["referendum"] === false)
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, —Å–µ–π—á–∞—Å –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤—ã–±–æ—Ä—ã.");
		else{
			$gov["referendum"] = false;
			government_api_setdata($db, $gov);
			$db->save();
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, –≤—ã–±–æ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.");
		}
	}
	else
		$messagesModule->sendSilentMessage($data->object->peer_id, Bot\Messages::MESSAGE_NO_RIGHTS);
}

function government_referendum_candidate($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);
	$gov = government_api_getdata($db);
	$referendum = $gov["referendum"];
	if($referendum !== false){
		$date = time(); // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—Ä–µ–º–µ–Ω–∏

		if($gov["previous_president_id"] == $data->object->from_id){
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, ‚õî–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –±–∞–ª–æ—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –≤—Ç–æ—Ä–æ–π —Å—Ä–æ–∫.");
			return;
		}

		if($referendum["candidate1"]["id"] != $data->object->from_id && $referendum["candidate2"]["id"] != $data->object->from_id){
			if($referendum["candidate1"]["id"] == 0){
				$referendum["candidate1"]["id"] = $data->object->from_id;
				$gov["referendum"] = $referendum;
				government_api_setdata($db, $gov);
				$db->save();
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç ‚Ññ1.");
			}
			elseif($referendum["candidate2"]["id"] == 0) {
				$referendum["candidate2"]["id"] = $data->object->from_id;
				$referendum["last_notification_time"] = $date;
				$gov["referendum"] = $referendum;
				government_api_setdata($db, $gov);
				$db->save();
				$msg1 = ", –≤—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å –∫–∞–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç ‚Ññ2.";
				$msg2 = "–ö–∞–Ω–¥–∏–¥–∞—Ç—ã –Ω–∞–±—Ä–∞–Ω—ã, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π [!vote], —á—Ç–æ–±—ã —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏.";
				vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."API.messages.send({'peer_id':{$data->object->peer_id},'message':appeal+'{$msg1}','disable_mentions':true});return API.messages.send({'peer_id':{$data->object->peer_id},'message':'{$msg2}'});");
			}
			else
				$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, –∫–∞–Ω–¥–∏–¥–∞—Ç—ã —É–∂–µ –Ω–∞–±—Ä–∞–Ω—ã.");
		}
		else
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç –≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—ã.");
	}
	else
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, —Å–µ–π—á–∞—Å –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤—ã–±–æ—Ä—ã.");
}

function government_referendum_system($data, $db){
	$gov = government_api_getdata($db);
	$referendum = $gov["referendum"];
	if($referendum !== false){
		$date = time(); // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—Ä–µ–º–µ–Ω–∏
		if($date - $referendum["start_time"] >= 18000) {
			if($referendum["candidate1"]["id"] == 0 || $referendum["candidate2"]["id"] == 0){
				$gov["referendum"] = false;
				government_api_setdata($db, $gov);
				$msg = "‚ùó–í—ã–±–æ—Ä—ã –ø—Ä–µ—Ä–≤–∞–Ω—ã. –ü—Ä–∏—á–∏–Ω–∞: –Ω–µ –Ω–∞–±—Ä–∞–Ω–æ –Ω—É–∂–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤.";
				vk_execute("return API.messages.send({'peer_id':{$data->object->peer_id},'message':'{$msg}'});");
			} else {
				$candidate1_voters_count = $referendum["candidate1"]["voters_count"];
				$candidate2_voters_count = $referendum["candidate2"]["voters_count"];
				$all_voters_count = sizeof($referendum["all_voters"]);
				if($candidate1_voters_count > $candidate2_voters_count){
					$candidate_id = $referendum["candidate1"]["id"];
					$candidate_percent = round($candidate1_voters_count/$all_voters_count*100, 1);
					$res = json_decode(vk_execute("var users=API.users.get({'user_ids':[{$candidate_id}],'fields':'first_name_gen,last_name_gen,sex'});var sex_word='–û–Ω';if(users[0].sex==1){sex_word='–û–Ω–∞';}var msg='‚úÖ–ù–∞ –≤—ã–±–æ—Ä–∞—Ö –ø–æ–±–µ–∂–¥–∞–µ—Ç @id'+users[0].id+' ('+users[0].first_name+' '+users[0].last_name+'). '+sex_word+' –ø–æ–±–µ–∂–¥–∞–µ—Ç, –Ω–∞–±—Ä–∞–≤ {$candidate_percent}% –≥–æ–ª–æ—Å–æ–≤ –∏–∑–±–∏—Ä–∞—Ç–µ–ª–µ–π. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!';API.messages.send({'peer_id':{$data->object->peer_id},'message':msg});return {'first_name_gen':users[0].first_name_gen,'last_name_gen':users[0].last_name_gen};"));
					$ranksys = new RankSystem($db);
					if($ranksys->getUserRank($gov["president_id"]) == 2)
						$ranksys->setUserRank($gov["president_id"], 0);
					if($ranksys->getUserRank($candidate_id) == $ranksys->getMinRankValue())
						$ranksys->setUserRank($candidate_id, 2);
					$economy = new Economy\Main($db); // –ú–æ–¥—É–ª—å –≠–∫–æ–Ω–æ–º–∏–∫–∏
					if($gov["president_id"] != 0)
						$economy->getUser($gov["president_id"])->deleteItem("govdoc", "presidential_certificate");  // –£–±–∏—Ä–∞–µ–º —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ —É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
					$economy->getUser($candidate_id)->changeItem("govdoc", "presidential_certificate", 1); // –í—ã–¥–∞–µ–º —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –Ω–æ–≤–æ–º—É
					$gov["president_id"] = $candidate_id;
					$gov["presidential_power"] = 100;
					$gov["batch_name"] = "–ü–æ–ª–∏—Ç. –ø–∞—Ä—Ç–∏—è ".$res->response->first_name_gen." ".$res->response->last_name_gen;
					$gov["last_referendum_time"] = time();
					$gov["referendum"] = false;
					government_api_setdata($db, $gov);
				} elseif($candidate1_voters_count < $candidate2_voters_count) {
					$candidate_id = $referendum["candidate2"]["id"];
					$candidate_percent = round($candidate2_voters_count/$all_voters_count*100, 1);
					$res = json_decode(vk_execute("var users=API.users.get({'user_ids':[{$candidate_id}],'fields':'first_name_gen,last_name_gen,sex'});var sex_word='–û–Ω';if(users[0].sex==1){sex_word='–û–Ω–∞';}var msg='‚úÖ–ù–∞ –≤—ã–±–æ—Ä–∞—Ö –ø–æ–±–µ–∂–¥–∞–µ—Ç @id'+users[0].id+' ('+users[0].first_name+' '+users[0].last_name+'). '+sex_word+' –ø–æ–±–µ–∂–¥–∞–µ—Ç, –Ω–∞–±—Ä–∞–≤ {$candidate_percent}% –≥–æ–ª–æ—Å–æ–≤ –∏–∑–±–∏—Ä–∞—Ç–µ–ª–µ–π. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!';API.messages.send({'peer_id':{$data->object->peer_id},'message':msg});return {'first_name_gen':users[0].first_name_gen,'last_name_gen':users[0].last_name_gen};"));
					$ranksys = new RankSystem($db);
					if($ranksys->getUserRank($gov["president_id"]) == 2)
						$ranksys->setUserRank($gov["president_id"], 0);
					if($ranksys->getUserRank($candidate_id) == $ranksys->getMinRankValue())
						$ranksys->setUserRank($candidate_id, 2);
					$economy = new Economy\Main($db); // –ú–æ–¥—É–ª—å –≠–∫–æ–Ω–æ–º–∏–∫–∏
					if($gov["president_id"] != 0)
						$economy->getUser($gov["president_id"])->deleteItem("govdoc", "presidential_certificate");  // –£–±–∏—Ä–∞–µ–º —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ —É –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
					$economy->getUser($candidate_id)->changeItem("govdoc", "presidential_certificate", 1);  // –í—ã–¥–∞–µ–º —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏–µ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞ –Ω–æ–≤–æ–º—É
					$gov["president_id"] = $candidate_id;
					$gov["presidential_power"] = 100;
					$gov["batch_name"] = "–ü–æ–ª–∏—Ç. –ø–∞—Ä—Ç–∏—è ".$res->response->first_name_gen." ".$res->response->last_name_gen;
					$gov["last_referendum_time"] = time();
					$gov["referendum"] = false;
					government_api_setdata($db, $gov);
				} else {
				$msg = "‚ùó–í—ã–±–æ—Ä—ã –ø—Ä–µ—Ä–≤–∞–Ω—ã. –ü—Ä–∏—á–∏–Ω–∞: –æ–±–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –Ω–∞–±—Ä–∞–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ–ª–æ—Å–æ–≤.";
				vk_execute("return API.messages.send({'peer_id':{$data->object->peer_id},'message':'{$msg}'});");
				$db->unsetValue(array("government", "referendum"));
				}
			}
		}
		elseif($date - $referendum["last_notification_time"] >= 600){
			$db->setValue(array("government", "referendum", "last_notification_time"), $date);
			if($referendum["candidate1"]["id"] == 0 || $referendum["candidate2"]["id"] == 0){
				$msg = "–ù–∞—á–∞–ª–∏—Å—å –≤—ã–±–æ—Ä—ã –≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—ã –±–µ—Å–µ–¥—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –∫–∞–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É [!candidate].";
				vk_execute("return API.messages.send({'peer_id':{$data->object->peer_id},'message':'{$msg}'});");
			} else {
				$keyboard = vk_keyboard_inline(array(
					array(
						vk_callback_button("üìù%CANDIDATE1_NAME%", array('referendum_vote', 1), 'primary'),
						vk_callback_button("üìù%CANDIDATE2_NAME%", array('referendum_vote', 2), 'primary')
					)
				));
				$request = json_encode(array('peer_id' => $data->object->peer_id, 'message' => "–ö–∞–Ω–¥–∏–¥–∞—Ç—ã –Ω–∞–±—Ä–∞–Ω—ã, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞—Ç—å. –ò—Å–ø–æ–ª—å–∑—É–π [!vote], —á—Ç–æ–±—ã —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –Ω–∏–∂–µ.", 'keyboard' => $keyboard, 'disable_mentions' => true), JSON_UNESCAPED_UNICODE);
				$request = vk_parse_vars($request, array("CANDIDATE1_NAME", "CANDIDATE2_NAME"));
				$candidate1_id = $referendum["candidate1"]["id"];
				$candidate2_id = $referendum["candidate2"]["id"];
				vk_execute("var users=API.users.get({'user_ids':[{$candidate1_id},{$candidate2_id}]});var CANDIDATE1_NAME=users[0].first_name.substr(0, 2)+'. '+users[0].last_name;var CANDIDATE2_NAME=users[1].first_name.substr(0, 2)+'. '+users[1].last_name;return API.messages.send({$request});");
			}
		}
	}
	else{
		$chatModes = new ChatModes($db);
		if(!$chatModes->getModeValue("auto_referendum"))
			return;
		$date = time();
		$last_referendum_time = $db->getValue(array("government", "last_referendum_time"), 0);
		if($date - $last_referendum_time >= 432000){
			$gov["previous_president_id"] = $gov["president_id"];
			$gov["president_id"] = 0;
			$gov["rally"] = DB_GOVERNMENT_DEFAULT["rally"];
			$gov["referendum"] = array(
				'candidate1' => array('id' => 0, "voters_count" => 0),
				'candidate2' => array('id' => 0, "voters_count" => 0),
				'all_voters' => array(),
				'start_time' => $date,
				'last_notification_time' => $date
			);
			government_api_setdata($db, $gov);
			$msg = "–ù–∞—á–∞–ª–∏—Å—å –≤—ã–±–æ—Ä—ã –≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—ã –±–µ—Å–µ–¥—ã. –ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è, –∫–∞–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É \\\"!candidate\\\".";
			vk_execute("return API.messages.send({'peer_id':{$data->object->peer_id},'message':'{$msg}'});");
		}
	}
}

function government_referendum_vote_cb($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$payload = $finput->payload;
	$db = $finput->db;

	$date = time(); // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—Ä–µ–º–µ–Ω–∏

	$gov = government_api_getdata($db);
	$referendum = $gov["referendum"];

	$candidate = bot_get_array_value($payload, 1, 0);
	if(is_numeric($candidate)){
		if($candidate == 0){
			$keyboard = vk_keyboard_inline(array());
			$messagesModule = new Bot\Messages($db);
			$messagesModule->setAppealID($data->object->user_id);
			$messagesModule->editMessage($data->object->peer_id, $data->object->conversation_message_id, "‚ùó–ú–µ–Ω—é –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –∑–∞–∫—Ä—ã—Ç–æ.", array('keyboard' => $keyboard));
			return;
		}

		if($referendum === false){
			bot_show_snackbar($data->object->event_id, $data->object->user_id, $data->object->peer_id, "‚õî –°–µ–π—á–∞—Å –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤—ã–±–æ—Ä—ã.");
			return;
		}

		if($date - $referendum["start_time"] >= 18000){
			bot_show_snackbar($data->object->event_id, $data->object->user_id, $data->object->peer_id, "‚õî –ò—Å—Ç–µ–∫–ª–æ –≤—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è.");
			return;
		}

		for($i = 0; $i < sizeof($referendum["all_voters"]); $i++){
			if($referendum["all_voters"][$i] == $data->object->user_id){
				bot_show_snackbar($data->object->event_id, $data->object->user_id, $data->object->peer_id, "‚õî –í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏.");
				return;
			}
		}

		if($candidate == 1){
			$referendum["all_voters"][] = $data->object->user_id;
			$referendum["candidate1"]["voters_count"] = $referendum["candidate1"]["voters_count"] + 1;
			$gov["referendum"] = $referendum;
			government_api_setdata($db, $gov);
			$db->save();
			$candidate_id = $referendum["candidate1"]["id"];
			vk_execute("var user=API.users.get({'user_ids':[{$candidate_id}],'fields':'first_name_acc,last_name_acc'});var msg='üìù –í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ '+user[0].first_name_acc+' '+user[0].last_name_acc+'.';return API.messages.sendMessageEventAnswer({'event_id':'{$data->object->event_id}','user_id':{$data->object->user_id},'peer_id':{$data->object->peer_id},'event_data':'{\"type\":\"show_snackbar\",\"text\":\"'+msg+'\"}'});");

		}
		elseif($candidate == 2){
			$referendum["all_voters"][] = $data->object->user_id;
			$referendum["candidate2"]["voters_count"] = $referendum["candidate2"]["voters_count"] + 1;
			$gov["referendum"] = $referendum;
			government_api_setdata($db, $gov);
			$db->save();
			$candidate_id = $referendum["candidate2"]["id"];
			vk_execute("var user=API.users.get({'user_ids':[{$candidate_id}],'fields':'first_name_acc,last_name_acc'});var msg='üìù –í—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –∑–∞ '+user[0].first_name_acc+' '+user[0].last_name_acc+'.';return API.messages.sendMessageEventAnswer({'event_id':'{$data->object->event_id}','user_id':{$data->object->user_id},'peer_id':{$data->object->peer_id},'event_data':'{\"type\":\"show_snackbar\",\"text\":\"'+msg+'\"}'});");
		}
		else
			bot_show_snackbar($data->object->event_id, $data->object->user_id, $data->object->peer_id, '‚õî Internal error!');
	}
}

function government_referendum_vote_cmd($finput){
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
	$data = $finput->data; 
	$argv = $finput->argv;
	$db = $finput->db;

	$messagesModule = new Bot\Messages($db);
	$messagesModule->setAppealID($data->object->from_id);

	$gov = government_api_getdata($db);
	$referendum = $gov["referendum"];
	if($referendum !== false){
		if($referendum["candidate1"]["id"] != 0 && $referendum["candidate2"]["id"] != 0){
			$candidate1_id = $referendum["candidate1"]["id"];
			$candidate2_id = $referendum["candidate2"]["id"];

			$keyboard = vk_keyboard_inline(array(
				array(
					vk_callback_button("üìù%CANDIDATE1_NAME%", array('referendum_vote', 1), 'primary'),
					vk_callback_button("üìù%CANDIDATE2_NAME%", array('referendum_vote', 2), 'primary')
				),
				array(
					vk_callback_button("–ó–∞–∫—Ä—ã—Ç—å", array('referendum_vote'), 'negative')
				)
			));

			$request = json_encode(array('peer_id' => $data->object->peer_id, 'message' => "%msg%", 'keyboard' => $keyboard, 'disable_mentions' => true), JSON_UNESCAPED_UNICODE);
			$request = vk_parse_vars($request, array("CANDIDATE1_NAME", "CANDIDATE2_NAME", "msg"));

			vk_execute($messagesModule->makeExeAppealByID($data->object->from_id)."var users=API.users.get({'user_ids':[{$candidate1_id},{$candidate2_id}]});var CANDIDATE1_NAME=users[0].first_name.substr(0, 2)+'. '+users[0].last_name;var CANDIDATE2_NAME=users[1].first_name.substr(0, 2)+'. '+users[1].last_name;var msg=appeal+', —É—á–∞–≤—Å—Ç–≤—É–π –≤ –≤—ã–±–æ—Ä–∞—Ö –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞. –ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–Ω—Ä–∞–≤–∏–≤—à–µ–≥–æ—Å—è —Ç–µ–±–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∏ —Ç—ã –æ—Ç–¥–∞—à—å –∑–∞ –Ω–µ–≥–æ —Å–≤–æ–π –≥–æ–ª–æ—Å. –°–ø–∏—Å–æ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤:\\n‚úÖ@id'+users[0].id+' ('+users[0].first_name+' '+users[0].last_name+')\\n‚úÖ@id'+users[1].id+' ('+users[1].first_name+' '+users[1].last_name+')';return API.messages.send({$request});");
		}
		else
			$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, –∫–∞–Ω–¥–∏–¥–∞—Ç—ã –µ—â–µ –Ω–µ –Ω–∞–±—Ä–∞–Ω—ã. –í—ã –º–æ–∂–µ—Ç–µ –±–∞–ª–æ—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç—ã, –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–≤ –∫–æ–º–∞–Ω–¥—É \"!candidate\".");
	}
	else
		$messagesModule->sendSilentMessage($data->object->peer_id, "%appeal%, —Å–µ–π—á–∞—Å –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç –≤—ã–±–æ—Ä—ã.");
}

?>